{"ast":null,"code":"// const mysql = require('serverless-mysql')\n// const db = mysql({\n//   config: {\n//     host: process.env.MYSQL_HOST,\n//     database: process.env.MYSQL_DATABASE,\n//     user: process.env.MYSQL_USER,\n//     password: process.env.MYSQL_PASSWORD,\n//   },\n// })\n// const client = new ServerlessClient({\n//     user: process.env.DB_USER,\n//     host: process.env.DB_HOST,\n//     database: process.env.DB_NAME,\n//     password: process.env.DB_PASSWORD,\n//     // port: process.env.DB_PORT\n// });\nconst ServerlessClient = require('serverless-postgres');\n\nconsole.log(ServerlessClient);\nconst hostname = '127.0.0.1';\nconst port = 7000;\n\ntry {\n  const client = new ServerlessClient({\n    user: process.env.DB_USER,\n    host: \"localhost\",\n    database: process.env.DB_NAME,\n    password: process.env.DB_PASSWORD,\n    port: process.env.DB_PORT\n  });\n  await client.sconnect();\n  await client.query(`SELECT NOW()`);\n  console.log(\"connection ok\");\n  await client.clean();\n  res.statusCode = 200;\n  res.end();\n} catch (e) {\n  console.log(e.message);\n}\n\nconst db = ServerlessClient({\n  host: process.env.DB_HOST,\n  database: process.env.DB_NAME,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD\n});\n\nexports.query = async query => {\n  try {\n    const results = await db.query(query);\n    await db.end();\n    return results;\n  } catch (error) {\n    return {\n      error\n    };\n  }\n};","map":{"version":3,"sources":["/home/hnd/ws/learn/amplify/nextjs/next-mysql/lib/db.js"],"names":["ServerlessClient","require","console","log","hostname","port","client","user","process","env","DB_USER","host","database","DB_NAME","password","DB_PASSWORD","DB_PORT","sconnect","query","clean","res","statusCode","end","e","message","db","DB_HOST","exports","results","error"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,qBAAD,CAAhC;;AACAC,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AAGA,MAAMI,QAAQ,GAAG,WAAjB;AACA,MAAMC,IAAI,GAAG,IAAb;;AAEA,IAAI;AACJ,QAAMC,MAAM,GAAG,IAAIN,gBAAJ,CAAqB;AAChCO,IAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADc;AAEhCC,IAAAA,IAAI,EAAE,WAF0B;AAGhCC,IAAAA,QAAQ,EAAEJ,OAAO,CAACC,GAAR,CAAYI,OAHU;AAIhCC,IAAAA,QAAQ,EAAEN,OAAO,CAACC,GAAR,CAAYM,WAJU;AAKhCV,IAAAA,IAAI,EAAEG,OAAO,CAACC,GAAR,CAAYO;AALc,GAArB,CAAf;AAQA,QAAMV,MAAM,CAACW,QAAP,EAAN;AACA,QAAMX,MAAM,CAACY,KAAP,CAAc,cAAd,CAAN;AACAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,QAAMG,MAAM,CAACa,KAAP,EAAN;AACAC,EAAAA,GAAG,CAACC,UAAJ,GAAiB,GAAjB;AACAD,EAAAA,GAAG,CAACE,GAAJ;AACC,CAfD,CAeE,OAAOC,CAAP,EAAU;AACZrB,EAAAA,OAAO,CAACC,GAAR,CAAYoB,CAAC,CAACC,OAAd;AACC;;AAGD,MAAMC,EAAE,GAAGzB,gBAAgB,CAAC;AACxBW,EAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYiB,OADM;AAExBd,EAAAA,QAAQ,EAAEJ,OAAO,CAACC,GAAR,CAAYI,OAFE;AAGxBN,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,OAHM;AAIxBI,EAAAA,QAAQ,EAAEN,OAAO,CAACC,GAAR,CAAYM;AAJE,CAAD,CAA3B;;AAOAY,OAAO,CAACT,KAAR,GAAgB,MAAOA,KAAP,IAAiB;AAC/B,MAAI;AACF,UAAMU,OAAO,GAAG,MAAMH,EAAE,CAACP,KAAH,CAASA,KAAT,CAAtB;AACA,UAAMO,EAAE,CAACH,GAAH,EAAN;AACA,WAAOM,OAAP;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;AACF,CARD","sourcesContent":["// const mysql = require('serverless-mysql')\n\n// const db = mysql({\n//   config: {\n//     host: process.env.MYSQL_HOST,\n//     database: process.env.MYSQL_DATABASE,\n//     user: process.env.MYSQL_USER,\n//     password: process.env.MYSQL_PASSWORD,\n//   },\n// })\n\n// const client = new ServerlessClient({\n//     user: process.env.DB_USER,\n//     host: process.env.DB_HOST,\n//     database: process.env.DB_NAME,\n//     password: process.env.DB_PASSWORD,\n//     // port: process.env.DB_PORT\n// });\n\nconst ServerlessClient = require('serverless-postgres')\nconsole.log(ServerlessClient)\n\n\nconst hostname = '127.0.0.1';\nconst port = 7000;\n\ntry {\nconst client = new ServerlessClient({\n    user: process.env.DB_USER,\n    host: \"localhost\",\n    database: process.env.DB_NAME,\n    password: process.env.DB_PASSWORD,\n    port: process.env.DB_PORT\n});\n\nawait client.sconnect();\nawait client.query(`SELECT NOW()`);\nconsole.log(\"connection ok\");\nawait client.clean();\nres.statusCode = 200;\nres.end()\n} catch (e) {\nconsole.log(e.message);\n}\n\n\nconst db = ServerlessClient({\n    host: process.env.DB_HOST,\n    database: process.env.DB_NAME,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n  })\n\nexports.query = async (query) => {\n  try {\n    const results = await db.query(query)\n    await db.end()\n    return results\n  } catch (error) {\n    return { error }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}